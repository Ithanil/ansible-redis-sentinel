# Check that we don't accidentally affect a running system
- name: Check if redis-server service is already active (ignore errors when inactive/uninstalled)
  ansible.builtin.command: systemctl is-active redis-server
  register: redis_status
  changed_when: false
  ignore_errors: true

- name: Check if redis-sentinel service is already active (ignore errors when inactive/uninstalled)
  ansible.builtin.command: systemctl is-active redis-sentinel
  register: sentinel_status
  changed_when: false
  ignore_errors: true

# Process results
- name: Determine if all hosts are ready to continue
  ansible.builtin.set_fact:
    skip_sentinel_setup: true
  when: hostvars[item]['redis_status'].stdout|default('inactive') == 'active' and hostvars[item]['sentinel_status'].stdout|default('inactive') == 'active'
  loop: "{{ sentinel_hosts }}"

- name: Print reason for stop
  ansible.builtin.debug:
    msg: "Stopping, because redis-server and/or redis-sentinel services are already active. If this is expected, please stop the services on all hosts!"
  when: not ignore_running|default(false) and skip_sentinel_setup|default(false)

# Execute setup if services are inactive
- include_tasks: setup.yml
  when: ignore_running|default(false) or not skip_sentinel_setup|default(false)
